# DO NOT EDIT THIS FILE
# 8d1619cd-2839-4920-a493-2541e8392b80
# This is CI/CD version 0.12.0
#
# Changelog
#
# v0.4.0 - 07.09.2024 (by eXory2024)
# Add environment variable "ANIO_CICD" for scripts to detect CI.
# "ANIO_CICD" contains the current CI/CD version.
#
# v0.5.0 - 21.09.2024 (by eXory2024)
# Use "npm ci" (require package-lock.json) instead of "npm i"
#
# v0.6.0 - 24.09.2024 (by eXory2024)
# Add manual "experimental" releases.
#
# v0.7.0 - 01.11.2024 (by eXory2024)
# Add repository name to environment (ANIO_CICD_REPO)
#
# v0.8.0 - 09.12.2024 (by eXory2024)
# Bump node version to v22
#
# v0.9.0 - 20.03.2025 (by eXory2024)
# Bump node version to v23
#
# v0.10.0 - 12.05.2025 (by eXory2024)
# Default to publish npm packages to private npm registry.
# Tags starting with 'vpX.X.X' publish to the public npm registry.
#
# v0.11.0 - 16.05.2025 (by eXory2024)
# Adjust path of npmrc file and adjust paths inside npmrc file.
#
# v0.12.0 - 16.05.2025 (by eXory2024)
# - setup secrets in "test" job.
# - deduplicate setup of worker (private key, cert, access tokens)
# because it is needed in both "test" and "publish" jobs.
#

name: CI/CD

on:
  push:

jobs:
  # Run tests for on push
  test:
    name: Run Unit tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [23.x]
    env:
      ANIO_CICD: "v0.12.0"
      ANIO_CICD_REPO: "${{ github.repository }}"
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: "Setup private key, certificate and access tokens"
        uses: ./.github/actions/setup
        with:
          anio-pkey: ${{ secrets.ANIO_NPM_REGISTRY_GITHUB_CICD_PKEY }}
          anio-cert: ${{ secrets.ANIO_NPM_REGISTRY_GITHUB_CICD_CERT }}
          anio-registry-token: ${{ secrets.ANIO_NPM_REGISTRY_GITHUB_CICD_TOKEN }}
          npm-token: ${{ secrets.ANIO_NPM_TOKEN }}

      - name: "Install node modules (if present)"
        run: bash -c 'if [ -f package.json ]; then npm ci ; fi'

      - name: "Run .cicd/test.sh script (if present)"
        run: bash -c 'if [ -f ./.cicd/test.sh ]; then ./.cicd/test.sh ; fi'

  # Publish for tags starting with "v"
  publish:
    name: Deployment
    runs-on: ubuntu-latest
    needs: test
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      id-token: write
    env:
      ANIO_CICD: "v0.12.0"
      ANIO_CICD_REPO: "${{ github.repository }}"
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 23.x
          registry-url: "https://registry.npmjs.org"

      - name: "Setup private key, certificate and access tokens"
        uses: ./.github/actions/setup
        with:
          anio-pkey: ${{ secrets.ANIO_NPM_REGISTRY_GITHUB_CICD_PKEY }}
          anio-cert: ${{ secrets.ANIO_NPM_REGISTRY_GITHUB_CICD_CERT }}
          anio-registry-token: ${{ secrets.ANIO_NPM_REGISTRY_GITHUB_CICD_TOKEN }}
          npm-token: ${{ secrets.ANIO_NPM_TOKEN }}

      - name: "Install node modules (if present)"
        run: bash -c 'if [ -f package.json ]; then npm ci ; fi'

      #
      # Make sure package.json's version field and
      # tag name are consistent.
      #
      - name: "Validate package.json version (if present)"
        run: |
          if [[ "${{ github.ref_name }}" == vp* ]]; then
            CLEAN_VERSION="$(printf "%s" "${{ github.ref_name }}" | cut -c3-)"
          else
            CLEAN_VERSION="$(printf "%s" "${{ github.ref_name }}" | cut -c2-)"
          fi

          printf "Clean Version is \"%s\"\n" "$CLEAN_VERSION"

          if [ ! -f package.json ]; then
            printf "Skipping version check\n"
            exit 0
          fi

          if ! grep -q "\"$CLEAN_VERSION\"" package.json; then
            printf "Version number does not match what's inside package.json!\n" 1>&2
            exit 1
          fi

      - name: "Run .cicd/deploy.sh script"
        run: ./.cicd/deploy.sh
        env:
          RELEASE_VERSION: ${{ github.ref_name }}

          ANIO_SH_DEPLOY_URL: ${{ secrets.ANIO_SH_DEPLOY_URL }}
          ANIO_SH_DEPLOY_KEY: ${{ secrets.ANIO_SH_DEPLOY_KEY }}
